// Generated by Haxe 4.1.1
package interp._Function;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public final class Function_Impl_
{
	static
	{
		//line 7 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.inc = haxe.lang.Runtime.toString("inc");
		//line 8 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.dec = haxe.lang.Runtime.toString("dec");
		//line 9 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.neg = haxe.lang.Runtime.toString("neg");
		//line 10 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.add = haxe.lang.Runtime.toString("add");
		//line 11 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.mul = haxe.lang.Runtime.toString("mul");
		//line 12 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.div = haxe.lang.Runtime.toString("div");
		//line 13 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.lt = haxe.lang.Runtime.toString("lt");
		//line 14 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.eq = haxe.lang.Runtime.toString("eq");
		//line 15 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.s = haxe.lang.Runtime.toString("s");
		//line 16 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.c = haxe.lang.Runtime.toString("c");
		//line 17 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.b = haxe.lang.Runtime.toString("b");
		//line 18 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.t = haxe.lang.Runtime.toString("t");
		//line 19 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.f = haxe.lang.Runtime.toString("f");
		//line 20 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.pwr2 = haxe.lang.Runtime.toString("pwr2");
		//line 21 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.i = haxe.lang.Runtime.toString("i");
		//line 22 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.cons = haxe.lang.Runtime.toString("cons");
		//line 23 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.car = haxe.lang.Runtime.toString("car");
		//line 24 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.cdr = haxe.lang.Runtime.toString("cdr");
		//line 25 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.nil = haxe.lang.Runtime.toString("nil");
		//line 26 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.isnil = haxe.lang.Runtime.toString("isnil");
		//line 27 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.mod = haxe.lang.Runtime.toString("mod");
		//line 28 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.dem = haxe.lang.Runtime.toString("dem");
		//line 29 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.modem = haxe.lang.Runtime.toString("modem");
		//line 30 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.if0 = haxe.lang.Runtime.toString("if0");
		//line 31 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.draw = haxe.lang.Runtime.toString("draw");
		//line 32 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.multipledraw = haxe.lang.Runtime.toString("multipledraw");
		//line 33 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.f38 = haxe.lang.Runtime.toString("f38");
		//line 34 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.interact = haxe.lang.Runtime.toString("interact");
		//line 35 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		interp._Function.Function_Impl_.send = haxe.lang.Runtime.toString("send");
	}
	
	public static java.lang.String inc;
	
	public static java.lang.String dec;
	
	public static java.lang.String neg;
	
	public static java.lang.String add;
	
	public static java.lang.String mul;
	
	public static java.lang.String div;
	
	public static java.lang.String lt;
	
	public static java.lang.String eq;
	
	public static java.lang.String s;
	
	public static java.lang.String c;
	
	public static java.lang.String b;
	
	public static java.lang.String t;
	
	public static java.lang.String f;
	
	public static java.lang.String pwr2;
	
	public static java.lang.String i;
	
	public static java.lang.String cons;
	
	public static java.lang.String car;
	
	public static java.lang.String cdr;
	
	public static java.lang.String nil;
	
	public static java.lang.String isnil;
	
	public static java.lang.String mod;
	
	public static java.lang.String dem;
	
	public static java.lang.String modem;
	
	public static java.lang.String if0;
	
	public static java.lang.String draw;
	
	public static java.lang.String multipledraw;
	
	public static java.lang.String f38;
	
	public static java.lang.String interact;
	
	public static java.lang.String send;
	
	public static int getRequiredSize(java.lang.String this1)
	{
		//line 39 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		{
			//line 39 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			java.lang.String __temp_svar1 = (haxe.lang.Runtime.toString(this1));
			//line 39 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			if (( __temp_svar1 != null )) 
			{
				//line 39 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				switch (__temp_svar1.hashCode())
				{
					case 96417:
					{
						//line 45 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("add")) 
						{
							//line 45 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 45 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 116:
					{
						//line 53 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("t")) 
						{
							//line 53 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 53 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 98:
					{
						//line 52 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("b")) 
						{
							//line 52 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 3;
						}
						
						//line 52 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 3526536:
					{
						//line 70 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("send")) 
						{
							//line 70 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 70 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 99:
					{
						//line 51 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("c")) 
						{
							//line 51 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 3;
						}
						
						//line 51 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 115:
					{
						//line 50 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("s")) 
						{
							//line 50 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 3;
						}
						
						//line 50 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 98260:
					{
						//line 58 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("car")) 
						{
							//line 58 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 58 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 3454535:
					{
						//line 55 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("pwr2")) 
						{
							//line 55 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 55 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 98353:
					{
						//line 59 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("cdr")) 
						{
							//line 59 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 59 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 109073:
					{
						//line 60 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("nil")) 
						{
							//line 60 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 60 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 3059505:
					{
						//line 57 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("cons")) 
						{
							//line 57 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 3;
						}
						
						//line 57 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 108944:
					{
						//line 44 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("neg")) 
						{
							//line 44 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 44 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 99330:
					{
						//line 43 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("dec")) 
						{
							//line 43 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 43 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 256265044:
					{
						//line 67 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("multipledraw")) 
						{
							//line 67 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 67 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 99340:
					{
						//line 63 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("dem")) 
						{
							//line 63 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 63 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 108484:
					{
						//line 46 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("mul")) 
						{
							//line 46 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 46 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 99473:
					{
						//line 47 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("div")) 
						{
							//line 47 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 47 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 104069930:
					{
						//line 64 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("modem")) 
						{
							//line 64 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 64 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 3091780:
					{
						//line 66 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("draw")) 
						{
							//line 66 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 66 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 108290:
					{
						//line 62 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("mod")) 
						{
							//line 62 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 62 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 3244:
					{
						//line 49 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("eq")) 
						{
							//line 49 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 49 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 3464:
					{
						//line 48 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("lt")) 
						{
							//line 48 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 48 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 102:
					{
						//line 54 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("f")) 
						{
							//line 54 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 54 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 100504743:
					{
						//line 61 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("isnil")) 
						{
							//line 61 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 61 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 99659:
					{
						//line 68 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("f38")) 
						{
							//line 68 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 2;
						}
						
						//line 68 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 570398262:
					{
						//line 69 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("interact")) 
						{
							//line 69 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 3;
						}
						
						//line 69 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 105:
					{
						//line 56 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("i")) 
						{
							//line 56 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 56 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 104414:
					{
						//line 42 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("inc")) 
						{
							//line 42 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 42 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
					case 104115:
					{
						//line 65 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("if0")) 
						{
							//line 65 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 3;
						}
						
						//line 65 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
				}
				
			}
			
		}
		
		//line 37 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		return 0;
	}
	
	
	public static int getEvalThreshold(java.lang.String this1)
	{
		//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		{
			//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			java.lang.String __temp_svar1 = (haxe.lang.Runtime.toString(this1));
			//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			boolean __temp_executeDef2 = true;
			//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			if (( __temp_svar1 != null )) 
			{
				//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				switch (__temp_svar1.hashCode())
				{
					case 3059505:
					{
						//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						if (__temp_svar1.equals("cons")) 
						{
							//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							__temp_executeDef2 = false;
							//line 78 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
							return 1;
						}
						
						//line 76 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 79 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			if (__temp_executeDef2) 
			{
				//line 79 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				return interp._Function.Function_Impl_.getRequiredSize(this1);
			}
			else
			{
				//line 79 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				throw null;
			}
			
		}
		
	}
	
	
	public static java.lang.String toString(java.lang.String this1)
	{
		//line 85 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		return this1;
	}
	
	
	public static interp.Value execute(java.lang.String this1, interp.LinkValue args)
	{
		//line 88 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		try 
		{
			//line 90 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			java.lang.String func = haxe.lang.Runtime.toString(this1);
			//line 98 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			try 
			{
				//line 98 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				{
					//line 98 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					java.lang.String __temp_svar3 = (func);
					//line 98 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					if (( __temp_svar3 != null )) 
					{
						//line 98 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						switch (__temp_svar3.hashCode())
						{
							case 96417:
							{
								//line 103 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("add")) 
								{
									//line 103 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.add(args.get(( args.size - 1 )), args.get(( ( args.size - 1 ) - 1 )));
								}
								
								//line 103 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 116:
							{
								//line 160 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("t")) 
								{
									//line 160 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return args.get(( args.size - 1 ));
								}
								
								//line 160 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 98:
							{
								//line 154 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("b")) 
								{
									//line 155 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x0 = args.get(( args.size - 1 ));
									//line 156 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x1 = args.get(( ( args.size - 1 ) - 1 ));
									//line 157 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x2 = args.get(( ( args.size - 2 ) - 1 ));
									//line 158 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.ap(x0, interp.ValueTools.ap(x1, x2));
								}
								
								//line 154 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 3526536:
							{
								//line 229 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("send")) 
								{
									//line 229 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execSend(args.get(( args.size - 1 )));
								}
								
								//line 229 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 99:
							{
								//line 149 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("c")) 
								{
									//line 150 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x01 = args.get(( args.size - 1 ));
									//line 151 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x11 = args.get(( ( args.size - 1 ) - 1 ));
									//line 152 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x21 = args.get(( ( args.size - 2 ) - 1 ));
									//line 153 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.ap(interp.ValueTools.ap(x01, x21), x11);
								}
								
								//line 149 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 115:
							{
								//line 144 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("s")) 
								{
									//line 145 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x012 = args.get(( args.size - 1 ));
									//line 146 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x111 = args.get(( ( args.size - 1 ) - 1 ));
									//line 147 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x23 = args.get(( ( args.size - 2 ) - 1 ));
									//line 148 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.ap(interp.ValueTools.ap(x012, x23), interp.ValueTools.ap(x111, x23));
								}
								
								//line 144 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 98260:
							{
								//line 185 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("car")) 
								{
									//line 185 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execCar(args.get(( args.size - 1 )));
								}
								
								//line 185 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 3454535:
							{
								//line 163 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("pwr2")) 
								{
									//line 164 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									java.math.BigInteger x011 = java.math.BigInteger.ONE;
									//line 165 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									java.math.BigInteger two = java.math.BigInteger.valueOf(((long) (2) ));
									//line 166 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									{
										//line 166 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										int _g7 = 0;
										//line 166 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										int _g8 = interp.ValueTools.toInt(args.get(( args.size - 1 ))).intValue();
										//line 166 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										while (( _g7 < _g8 ))
										{
											//line 166 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											int i = _g7++;
											//line 168 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											x011 = x011.multiply(((java.math.BigInteger) (two) ));
										}
										
									}
									
									//line 170 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Int(x011);
								}
								
								//line 163 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 98353:
							{
								//line 188 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("cdr")) 
								{
									//line 188 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execCdr(args.get(( args.size - 1 )));
								}
								
								//line 188 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 109073:
							{
								//line 176 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("nil")) 
								{
									//line 176 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Func(haxe.lang.Runtime.toString("t"), null);
								}
								
								//line 176 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 3059505:
							{
								//line 178 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("cons")) 
								{
									//line 179 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x02 = args.get(( args.size - 1 ));
									//line 180 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x12 = args.get(( ( args.size - 1 ) - 1 ));
									//line 181 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value x22 = args.get(( ( args.size - 2 ) - 1 ));
									//line 182 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.ap(interp.ValueTools.ap(x22, x02), x12);
								}
								
								//line 178 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 108944:
							{
								//line 102 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("neg")) 
								{
									//line 102 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Int(interp.ValueTools.toInt(args.get(( args.size - 1 ))).negate());
								}
								
								//line 102 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 99330:
							{
								//line 101 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("dec")) 
								{
									//line 101 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.add(args.get(( args.size - 1 )), interp.Value.Int(java.math.BigInteger.valueOf(((long) (-1) ))));
								}
								
								//line 101 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 256265044:
							{
								//line 207 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("multipledraw")) 
								{
									//line 207 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Func(haxe.lang.Runtime.toString("multipledraw"), args);
								}
								
								//line 207 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 99340:
							{
								//line 213 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("dem")) 
								{
									//line 213 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Func(func, args);
								}
								
								//line 213 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 108484:
							{
								//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("mul")) 
								{
									//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value _g2 = args.get(( ( args.size - 1 ) - 1 ));
									//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value _g3 = args.get(( args.size - 1 ));
									//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									switch (_g3.index)
									{
										case 0:
										{
											//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											java.math.BigInteger _g4 = ((java.math.BigInteger) (_g3.params[0]) );
											//line 108 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											interp.Value x14 = _g2;
											//line 108 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											java.math.BigInteger _int = _g4;
											//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											if (_int.equals(((java.lang.Object) (java.math.BigInteger.ZERO) ))) 
											{
												//line 109 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
												return interp.Value.Int(java.math.BigInteger.ZERO);
											}
											else
											{
												//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
												switch (_g2.index)
												{
													case 0:
													{
														//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														java.math.BigInteger _g5 = ((java.math.BigInteger) (_g2.params[0]) );
														//line 110 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														java.math.BigInteger int1 = _g5;
														//line 110 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														interp.Value x03 = _g3;
														//line 110 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														if (int1.equals(((java.lang.Object) (java.math.BigInteger.ZERO) ))) 
														{
															//line 111 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															return interp.Value.Int(java.math.BigInteger.ZERO);
														}
														else
														{
															//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															java.math.BigInteger int2 = _g4;
															//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															interp.Value x15 = _g2;
															//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															if (int2.equals(((java.lang.Object) (java.math.BigInteger.ONE) ))) 
															{
																//line 113 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																return x15;
															}
															else
															{
																//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																java.math.BigInteger int3 = _g5;
																//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																interp.Value x04 = _g3;
																//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																if (int3.equals(((java.lang.Object) (java.math.BigInteger.ONE) ))) 
																{
																	//line 115 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																	return x04;
																}
																else
																{
																	//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																	interp.Value x05 = _g3;
																	//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																	interp.Value x16 = _g2;
																	//line 117 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																	return interp.Value.Int(interp.ValueTools.toInt(x05).multiply(((java.math.BigInteger) (interp.ValueTools.toInt(x16)) )));
																}
																
															}
															
														}
														
													}
													
													
													default:
													{
														//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														java.math.BigInteger int4 = _g4;
														//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														interp.Value x17 = _g2;
														//line 112 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														if (int4.equals(((java.lang.Object) (java.math.BigInteger.ONE) ))) 
														{
															//line 113 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															return x17;
														}
														else
														{
															//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															interp.Value x06 = _g3;
															//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															interp.Value x18 = _g2;
															//line 117 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															return interp.Value.Int(interp.ValueTools.toInt(x06).multiply(((java.math.BigInteger) (interp.ValueTools.toInt(x18)) )));
														}
														
													}
													
												}
												
											}
											
										}
										
										
										default:
										{
											//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											switch (_g2.index)
											{
												case 0:
												{
													//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													java.math.BigInteger _g6 = ((java.math.BigInteger) (_g2.params[0]) );
													//line 110 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													java.math.BigInteger int5 = _g6;
													//line 110 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													interp.Value x07 = _g3;
													//line 110 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													if (int5.equals(((java.lang.Object) (java.math.BigInteger.ZERO) ))) 
													{
														//line 111 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														return interp.Value.Int(java.math.BigInteger.ZERO);
													}
													else
													{
														//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														java.math.BigInteger int6 = _g6;
														//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														interp.Value x08 = _g3;
														//line 114 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
														if (int6.equals(((java.lang.Object) (java.math.BigInteger.ONE) ))) 
														{
															//line 115 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															return x08;
														}
														else
														{
															//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															interp.Value x09 = _g3;
															//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															interp.Value x19 = _g2;
															//line 117 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															return interp.Value.Int(interp.ValueTools.toInt(x09).multiply(((java.math.BigInteger) (interp.ValueTools.toInt(x19)) )));
														}
														
													}
													
												}
												
												
												default:
												{
													//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													interp.Value x010 = _g3;
													//line 116 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													interp.Value x110 = _g2;
													//line 117 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													return interp.Value.Int(interp.ValueTools.toInt(x010).multiply(((java.math.BigInteger) (interp.ValueTools.toInt(x110)) )));
												}
												
											}
											
										}
										
									}
									
								}
								
								//line 106 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 99473:
							{
								//line 119 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("div")) 
								{
									//line 120 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									java.math.BigInteger x13 = interp.ValueTools.toInt(args.get(( ( args.size - 1 ) - 1 )));
									//line 121 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									if (x13.equals(((java.lang.Object) (java.math.BigInteger.ONE) ))) 
									{
										//line 123 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return args.get(( args.size - 1 ));
									}
									else
									{
										//line 127 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return interp.Value.Int(interp.ValueTools.toInt(args.get(( args.size - 1 ))).divide(((java.math.BigInteger) (x13) )));
									}
									
								}
								
								//line 119 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 104069930:
							{
								//line 216 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("modem")) 
								{
									//line 216 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execModem(args.get(( args.size - 1 )));
								}
								
								//line 216 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 3091780:
							{
								//line 204 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("draw")) 
								{
									//line 204 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Func(haxe.lang.Runtime.toString("draw"), args);
								}
								
								//line 204 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 108290:
							{
								//line 210 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("mod")) 
								{
									//line 210 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.Value.Func(func, args);
								}
								
								//line 210 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 3244:
							{
								//line 130 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("eq")) 
								{
									//line 130 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									switch (interp.ValueTools.eq(args.get(( args.size - 1 )), args.get(( ( args.size - 1 ) - 1 ))))
									{
										case 0:
										{
											//line 136 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											return interp.Value.Func(haxe.lang.Runtime.toString("t"), null);
										}
										
										
										case 1:
										{
											//line 139 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											return interp.Value.Func(haxe.lang.Runtime.toString("f"), null);
										}
										
										
										case 2:
										{
											//line 133 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											return interp.Value.Func(func, args);
										}
										
										
									}
									
								}
								
								//line 130 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 3464:
							{
								//line 142 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("lt")) 
								{
									//line 142 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									if (( interp.ValueTools.toInt(args.get(( args.size - 1 ))).compareTo(((java.math.BigInteger) (interp.ValueTools.toInt(args.get(( ( args.size - 1 ) - 1 )))) )) == -1 )) 
									{
										//line 142 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return interp.Value.Func(haxe.lang.Runtime.toString("t"), null);
									}
									else
									{
										//line 142 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return interp.Value.Func(haxe.lang.Runtime.toString("f"), null);
									}
									
								}
								
								//line 142 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 102:
							{
								//line 162 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("f")) 
								{
									//line 162 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return args.get(( ( args.size - 1 ) - 1 ));
								}
								
								//line 162 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 100504743:
							{
								//line 191 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("isnil")) 
								{
									//line 191 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.Value _g = args.get(( args.size - 1 ));
									//line 191 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									switch (_g.index)
									{
										case 2:
										{
											//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											interp.LinkValue _g1 = ((interp.LinkValue) (_g.params[1]) );
											//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											{
												//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
												java.lang.String __temp_svar1 = (haxe.lang.Runtime.toString(_g.params[0]));
												//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
												boolean __temp_executeDef2 = true;
												//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
												if (( __temp_svar1 != null )) 
												{
													//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													switch (__temp_svar1.hashCode())
													{
														case 109073:
														{
															//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															if (__temp_svar1.equals("nil")) 
															{
																//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																__temp_executeDef2 = false;
																//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																if (( _g1 == null )) 
																{
																	//line 194 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																	return interp.Value.Func(haxe.lang.Runtime.toString("t"), null);
																}
																else
																{
																	//line 197 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
																	return interp.Value.Func(haxe.lang.Runtime.toString("f"), null);
																}
																
															}
															
															//line 193 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
															break;
														}
														
														
													}
													
												}
												
												//line 197 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
												if (__temp_executeDef2) 
												{
													//line 197 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													return interp.Value.Func(haxe.lang.Runtime.toString("f"), null);
												}
												else
												{
													//line 197 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
													throw null;
												}
												
											}
											
										}
										
										
										default:
										{
											//line 197 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
											return interp.Value.Func(haxe.lang.Runtime.toString("f"), null);
										}
										
									}
									
								}
								
								//line 191 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 99659:
							{
								//line 219 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("f38")) 
								{
									//line 219 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execF38(args.get(( args.size - 1 )), args.get(( ( args.size - 1 ) - 1 )));
								}
								
								//line 219 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 570398262:
							{
								//line 222 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("interact")) 
								{
									//line 222 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execInteract(args.get(( args.size - 1 )), args.get(( ( args.size - 1 ) - 1 )), args.get(( ( args.size - 2 ) - 1 )));
								}
								
								//line 222 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 105:
							{
								//line 173 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("i")) 
								{
									//line 173 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return args.get(( args.size - 1 ));
								}
								
								//line 173 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 104414:
							{
								//line 100 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("inc")) 
								{
									//line 100 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp.ValueTools.add(args.get(( args.size - 1 )), interp.Value.Int(java.math.BigInteger.valueOf(((long) (1) ))));
								}
								
								//line 100 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
							case 104115:
							{
								//line 201 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar3.equals("if0")) 
								{
									//line 201 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									return interp._Function.Function_Impl_.execIf0(args.get(( args.size - 1 )), args.get(( ( args.size - 1 ) - 1 )), args.get(( ( args.size - 2 ) - 1 )));
								}
								
								//line 201 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
						}
						
					}
					
				}
				
			}
			catch (java.lang.Throwable _g9)
			{
				//line 96 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				if (( ((java.lang.Object) (haxe.Exception.caught(_g9).unwrap()) ) instanceof interp.TypeError )) 
				{
					//line 234 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					return interp.Value.Func(func, args);
				}
				else
				{
					//line 96 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					throw _g9;
				}
				
			}
			
			
			//line 88 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			return null;
		}
		catch (java.lang.Throwable typedException)
		{
			//line 88 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static interp.Value execF38(interp.Value x2, interp.Value x0)
	{
		//line 240 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		try 
		{
			//line 242 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			try 
			{
				//line 242 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				if (interp.ValueTools.toInt(interp._Function.Function_Impl_.execCar(x0)).equals(((java.lang.Object) (java.math.BigInteger.ZERO) ))) 
				{
					//line 244 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					return interp._Function.Function_Impl_.pair(interp._Function.Function_Impl_.execModem(interp._Function.Function_Impl_.execCar(interp._Function.Function_Impl_.execCdr(x0))), interp._Function.Function_Impl_.pair(interp.Value.Func(haxe.lang.Runtime.toString("multipledraw"), interp.LinkValue.create1(interp._Function.Function_Impl_.execCar(interp._Function.Function_Impl_.execCdr(interp._Function.Function_Impl_.execCdr(x0))))), interp.Value.Func(haxe.lang.Runtime.toString("nil"), null)));
				}
				else
				{
					//line 256 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					return interp._Function.Function_Impl_.execInteract(x2, interp._Function.Function_Impl_.execModem(interp._Function.Function_Impl_.execCar(interp._Function.Function_Impl_.execCdr(x0))), interp._Function.Function_Impl_.execSend(interp._Function.Function_Impl_.execCar(interp._Function.Function_Impl_.execCdr(interp._Function.Function_Impl_.execCdr(x0)))));
				}
				
			}
			catch (java.lang.Throwable _g)
			{
				//line 240 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				if (( ((java.lang.Object) (haxe.Exception.caught(_g).unwrap()) ) instanceof interp.TypeError )) 
				{
					//line 265 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					return interp.Value.Func(haxe.lang.Runtime.toString("f38"), interp.LinkValue.create2(x2, x0));
				}
				else
				{
					//line 240 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					throw _g;
				}
				
			}
			
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 238 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static interp.Value execInteract(interp.Value x2, interp.Value x4, interp.Value x3)
	{
		//line 271 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		try 
		{
			//line 273 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			try 
			{
				//line 273 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				return interp._Function.Function_Impl_.execF38(x2, interp.ValueTools.ap(interp.ValueTools.ap(x2, x4), x3));
			}
			catch (java.lang.Throwable _g)
			{
				//line 271 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				if (( ((java.lang.Object) (haxe.Exception.caught(_g).unwrap()) ) instanceof interp.TypeError )) 
				{
					//line 280 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					return interp.Value.Func(haxe.lang.Runtime.toString("interact"), interp.LinkValue.create3(x2, x4, x3));
				}
				else
				{
					//line 271 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					throw _g;
				}
				
			}
			
			
		}
		catch (java.lang.Throwable typedException)
		{
			//line 269 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			throw ((java.lang.RuntimeException) (haxe.Exception.thrown(typedException)) );
		}
		
		
	}
	
	
	public static interp.Value pair(interp.Value x0, interp.Value x1)
	{
		//line 286 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		return interp.Value.Func(haxe.lang.Runtime.toString("cons"), interp.LinkValue.create2(x0, x1));
	}
	
	
	public static interp.Value execIf0(interp.Value x0, interp.Value x1, interp.Value x2)
	{
		//line 290 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		if (interp.ValueTools.toInt(x0).equals(((java.lang.Object) (java.math.BigInteger.ZERO) ))) 
		{
			//line 290 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			return x1;
		}
		else
		{
			//line 290 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
			return x2;
		}
		
	}
	
	
	public static interp.Value execModem(interp.Value command)
	{
		//line 294 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		return interp.Value.Func(haxe.lang.Runtime.toString("dem"), interp.LinkValue.create1(interp.Value.Func(haxe.lang.Runtime.toString("mod"), interp.LinkValue.create1(command))));
	}
	
	
	public static interp.Value execCar(interp.Value command)
	{
		//line 298 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		switch (command.index)
		{
			case 2:
			{
				//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				interp.LinkValue _g = ((interp.LinkValue) (command.params[1]) );
				//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				{
					//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					java.lang.String __temp_svar1 = (haxe.lang.Runtime.toString(command.params[0]));
					//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					boolean __temp_executeDef2 = true;
					//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					if (( __temp_svar1 != null )) 
					{
						//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						switch (__temp_svar1.hashCode())
						{
							case 3059505:
							{
								//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar1.equals("cons")) 
								{
									//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									__temp_executeDef2 = false;
									//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.LinkValue value = _g;
									//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									if (( value.size == 2 )) 
									{
										//line 301 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return value.get(1);
									}
									else
									{
										//line 303 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										interp.Value arg = command;
										//line 304 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return interp.ValueTools.ap(arg, interp.Value.Func(haxe.lang.Runtime.toString("t"), null));
									}
									
								}
								
								//line 300 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
						}
						
					}
					
					//line 303 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					if (__temp_executeDef2) 
					{
						//line 303 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						interp.Value arg1 = command;
						//line 304 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						return interp.ValueTools.ap(arg1, interp.Value.Func(haxe.lang.Runtime.toString("t"), null));
					}
					else
					{
						//line 303 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						throw null;
					}
					
				}
				
			}
			
			
			default:
			{
				//line 303 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				interp.Value arg2 = command;
				//line 304 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				return interp.ValueTools.ap(arg2, interp.Value.Func(haxe.lang.Runtime.toString("t"), null));
			}
			
		}
		
	}
	
	
	public static interp.Value execCdr(interp.Value command)
	{
		//line 309 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		switch (command.index)
		{
			case 2:
			{
				//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				interp.LinkValue _g = ((interp.LinkValue) (command.params[1]) );
				//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				{
					//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					java.lang.String __temp_svar1 = (haxe.lang.Runtime.toString(command.params[0]));
					//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					boolean __temp_executeDef2 = true;
					//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					if (( __temp_svar1 != null )) 
					{
						//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						switch (__temp_svar1.hashCode())
						{
							case 3059505:
							{
								//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								if (__temp_svar1.equals("cons")) 
								{
									//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									__temp_executeDef2 = false;
									//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									interp.LinkValue value = _g;
									//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
									if (( value.size == 2 )) 
									{
										//line 312 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return value.get(0);
									}
									else
									{
										//line 314 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										interp.Value arg = command;
										//line 315 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
										return interp.ValueTools.ap(arg, interp.Value.Func(haxe.lang.Runtime.toString("f"), null));
									}
									
								}
								
								//line 311 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
								break;
							}
							
							
						}
						
					}
					
					//line 314 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
					if (__temp_executeDef2) 
					{
						//line 314 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						interp.Value arg1 = command;
						//line 315 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						return interp.ValueTools.ap(arg1, interp.Value.Func(haxe.lang.Runtime.toString("f"), null));
					}
					else
					{
						//line 314 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
						throw null;
					}
					
				}
				
			}
			
			
			default:
			{
				//line 314 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				interp.Value arg2 = command;
				//line 315 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
				return interp.ValueTools.ap(arg2, interp.Value.Func(haxe.lang.Runtime.toString("f"), null));
			}
			
		}
		
	}
	
	
	public static interp.Value execSend(interp.Value args)
	{
		//line 321 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\Function.hx"
		return interp.Value.Func(haxe.lang.Runtime.toString("send"), interp.LinkValue.create1(args));
	}
	
	
}


