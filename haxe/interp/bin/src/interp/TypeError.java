// Generated by Haxe 4.1.1
package interp;

import haxe.root.*;

@SuppressWarnings(value={"rawtypes", "unchecked"})
public class TypeError extends haxe.lang.HxObject
{
	public TypeError(haxe.lang.EmptyObject empty)
	{
	}
	
	
	public TypeError(java.lang.String message)
	{
		//line 6 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		interp.TypeError.__hx_ctor_interp_TypeError(this, message);
	}
	
	
	protected static void __hx_ctor_interp_TypeError(interp.TypeError __hx_this, java.lang.String message)
	{
		//line 8 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		__hx_this.message = message;
	}
	
	
	public java.lang.String message;
	
	@Override public java.lang.String toString()
	{
		//line 13 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		return this.message;
	}
	
	
	@Override public java.lang.Object __hx_setField(java.lang.String field, java.lang.Object value, boolean handleProperties)
	{
		//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		{
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			if (( field != null )) 
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				switch (field.hashCode())
				{
					case 954925063:
					{
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						if (field.equals("message")) 
						{
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							__temp_executeDef1 = false;
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							this.message = haxe.lang.Runtime.toString(value);
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							return value;
						}
						
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				return super.__hx_setField(field, value, handleProperties);
			}
			else
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_getField(java.lang.String field, boolean throwErrors, boolean isCheck, boolean handleProperties)
	{
		//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		{
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			if (( field != null )) 
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				switch (field.hashCode())
				{
					case -1776922004:
					{
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						if (field.equals("toString")) 
						{
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							__temp_executeDef1 = false;
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							return ((haxe.lang.Function) (new haxe.lang.Closure(this, "toString")) );
						}
						
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						break;
					}
					
					
					case 954925063:
					{
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						if (field.equals("message")) 
						{
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							__temp_executeDef1 = false;
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							return this.message;
						}
						
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				return super.__hx_getField(field, throwErrors, isCheck, handleProperties);
			}
			else
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public java.lang.Object __hx_invokeField(java.lang.String field, java.lang.Object[] dynargs)
	{
		//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		{
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			boolean __temp_executeDef1 = true;
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			if (( field != null )) 
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				switch (field.hashCode())
				{
					case -1776922004:
					{
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						if (field.equals("toString")) 
						{
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							__temp_executeDef1 = false;
							//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
							return this.toString();
						}
						
						//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
						break;
					}
					
					
				}
				
			}
			
			//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
			if (__temp_executeDef1) 
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				return super.__hx_invokeField(field, dynargs);
			}
			else
			{
				//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
				throw null;
			}
			
		}
		
	}
	
	
	@Override public void __hx_getFields(haxe.root.Array<java.lang.String> baseArr)
	{
		//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		baseArr.push("message");
		//line 3 "C:\\Users\\909mm\\Desktop\\Work\\git\\icfpc2020\\haxe\\interp\\src\\interp\\TypeError.hx"
		super.__hx_getFields(baseArr);
	}
	
	
}


